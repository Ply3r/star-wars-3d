{"version":3,"sources":["testData.js","context/MyProvider.js","images/images.js","images/Alderaan.jpg","images/Bespin.jpg","images/Curuscant.jpg","images/Dagobah.jpg","images/Endor.jpg","images/Hoth.jpg","images/Kamino.jpg","images/Naboo.jpg","images/tatooine.jpg","images/Yavin_IV.jpg","components/Planet.js","components/Planets.js","components/Filter.js","components/Infos.js","App.js","index.js"],"names":["response","count","next","previous","results","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","myContext","createContext","INITIAL_STATE","planets","filters","filterByName","filterByNumericValues","order","column","sort","MyProvider","children","useState","header","setHeader","data","setData","actualPosition","setActualPosition","useEffect","newHeader","value","setFilter","newFilter","Provider","images","Alderaan","Bespin","Coruscant","Dagobah","Endor","Hoth","Kamino","Naboo","Tatooine","Planet","size","Math","floor","Number","texture","THREE","load","planetShape","image","map","Planets","useContext","hold","valueA","valueB","bool","scene","camera","window","innerWidth","innerHeight","render","canvas","document","getElementById","body","appendChild","domElement","position","z","controls","OrbitControls","setPixelRatio","devicePixelRatio","setSize","forEach","planet","push","length","add","ambientLight","light","c","shape","color","star","x","random","y","addStars","addEventListener","aspect","updateProjectionMatrix","animate","requestAnimationFrame","realRotation","rotation","update","id","Filter","setName","columnFilter","setColumnFilter","comparisionFilter","setComparisionFilter","valueFilter","setValueFilter","columnSort","setColumnSort","direction","setDirection","renderColumns","removeNames","columnFilterKeys","filter","key","includes","currentFilters","comparison","className","type","onClick","filtredNumericFilter","deleteNumericFilter","newName","changeName","planetName","RegExp","test","changeData","placeholder","onChange","target","disabled","htmlFor","checked","Info","prevPos","nextPos","renderName","planetInfo","elements","Object","entries","info","title","split","join","renderInfo","App","ReactDOM"],"mappings":"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","file":"static/js/main.ba863111.chunk.js","sourcesContent":["const response = {\n  count: 60,\n  next: 'https://swapi-trybe.herokuapp.com/api/planets/?page=2',\n  previous: null,\n  results: [\n    {\n      name: 'Tatooine',\n      rotation_period: '23',\n      orbital_period: '304',\n      diameter: '10465',\n      climate: 'arid',\n      gravity: '1 standard',\n      terrain: 'desert',\n      surface_water: '1',\n      population: '200000',\n    },\n    {\n      name: 'Alderaan',\n      rotation_period: '24',\n      orbital_period: '364',\n      diameter: '12500',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'grasslands, mountains',\n      surface_water: '40',\n      population: '2000000000',\n    },\n    {\n      name: 'Yavin IV',\n      rotation_period: '24',\n      orbital_period: '4818',\n      diameter: '10200',\n      climate: 'temperate, tropical',\n      gravity: '1 standard',\n      terrain: 'jungle, rainforests',\n      surface_water: '8',\n      population: '1000',\n    },\n    {\n      name: 'Hoth',\n      rotation_period: '23',\n      orbital_period: '549',\n      diameter: '7200',\n      climate: 'frozen',\n      gravity: '1.1 standard',\n      terrain: 'tundra, ice caves, mountain ranges',\n      surface_water: '100',\n      population: 'unknown',\n    },\n    {\n      name: 'Dagobah',\n      rotation_period: '23',\n      orbital_period: '341',\n      diameter: '8900',\n      climate: 'murky',\n      gravity: 'N/A',\n      terrain: 'swamp, jungles',\n      surface_water: '8',\n      population: 'unknown',\n    },\n    {\n      name: 'Bespin',\n      rotation_period: '12',\n      orbital_period: '5110',\n      diameter: '118000',\n      climate: 'temperate',\n      gravity: '1.5 (surface), 1 standard (Cloud City)',\n      terrain: 'gas giant',\n      surface_water: '0',\n      population: '6000000',\n    },\n    {\n      name: 'Endor',\n      rotation_period: '18',\n      orbital_period: '402',\n      diameter: '4900',\n      climate: 'temperate',\n      gravity: '0.85 standard',\n      terrain: 'forests, mountains, lakes',\n      surface_water: '8',\n      population: '30000000',\n    },\n    {\n      name: 'Naboo',\n      rotation_period: '26',\n      orbital_period: '312',\n      diameter: '12120',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'grassy hills, swamps, forests, mountains',\n      surface_water: '12',\n      population: '4500000000',\n    },\n    {\n      name: 'Coruscant',\n      rotation_period: '24',\n      orbital_period: '368',\n      diameter: '12240',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'cityscape, mountains',\n      surface_water: 'unknown',\n      population: '1000000000000',\n    },\n    {\n      name: 'Kamino',\n      rotation_period: '27',\n      orbital_period: '463',\n      diameter: '19720',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'ocean',\n      surface_water: '100',\n      population: '1000000000',\n    },\n  ],\n};\n\nexport default response\n","import React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport response from '../testData';\n\nexport const myContext = createContext();\n\nconst INITIAL_STATE = {\n  planets: [],\n  filters: {\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  },\n};\n\nconst MyProvider = ({ children }) => {\n  const [header, setHeader] = useState(INITIAL_STATE);\n  const [data, setData] = useState([]);\n  const [actualPosition, setActualPosition] = useState(0)\n\n  const updatePlanets = () => {\n    const planets = response.results;\n    const newHeader = {\n      ...header,\n      planets,\n    };\n    setHeader(newHeader);\n    setData(planets);\n  };\n\n  const setFilter = (filters) => {\n    const newFilter = {\n      ...header,\n      filters,\n    };\n    setHeader(newFilter);\n  };\n\n  useEffect(updatePlanets, []);\n\n  const { filters, planets } = header;\n\n  const value = {\n    data,\n    planets,\n    actualPosition,\n    header,\n    filters,\n    setActualPosition,\n    setFilter,\n    setData,\n  };\n\n  return (\n    <myContext.Provider value={ value }>\n      { children }\n    </myContext.Provider>\n  );\n};\n\nexport default MyProvider;\n\nMyProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import Alderaan from './Alderaan.jpg';\nimport Bespin from './Bespin.jpg';\nimport Coruscant from './Curuscant.jpg';\nimport Dagobah from './Dagobah.jpg';\nimport Endor from './Endor.jpg';\nimport Hoth from './Hoth.jpg';\nimport Kamino from './Kamino.jpg'\nimport Naboo from './Naboo.jpg';\nimport Tatooine from './tatooine.jpg';\nimport Yavin_IV from './Yavin_IV.jpg'\n\nconst images = {\n  Alderaan,\n  Bespin,\n  Coruscant,\n  Dagobah,\n  Endor,\n  Hoth,\n  Kamino,\n  Naboo,\n  Tatooine,\n  'Yavin IV': Yavin_IV,\n}\n\nexport default images;","export default __webpack_public_path__ + \"static/media/Alderaan.646bb435.jpg\";","export default __webpack_public_path__ + \"static/media/Bespin.3b074d8e.jpg\";","export default __webpack_public_path__ + \"static/media/Curuscant.b5b0e32e.jpg\";","export default __webpack_public_path__ + \"static/media/Dagobah.648cde9c.jpg\";","export default __webpack_public_path__ + \"static/media/Endor.2eaef05f.jpg\";","export default __webpack_public_path__ + \"static/media/Hoth.6a1c6cd2.jpg\";","export default __webpack_public_path__ + \"static/media/Kamino.f3a0e6f4.jpg\";","export default __webpack_public_path__ + \"static/media/Naboo.01b4d09c.jpg\";","export default __webpack_public_path__ + \"static/media/tatooine.a0799d62.jpg\";","export default __webpack_public_path__ + \"static/media/Yavin_IV.e990f2b9.jpg\";","import * as THREE from 'three';\nimport images from '../images/images';\n\nconst Planet = (diameter, name) => {\n  const size = Math.floor(Number(diameter)/1000)\n  const texture = new THREE.TextureLoader().load(images[name])\n  const planetShape = new THREE.SphereGeometry(size, 60, 30)\n  const image = new THREE.MeshStandardMaterial({ map: texture })\n  const planet = new THREE.Mesh(planetShape, image)\n\n  return planet\n}\n\nexport default Planet;\n","import React, { useContext, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { myContext } from '../context/MyProvider';\nimport Planet from './Planet';\n\nconst Planets = () => {\n  const { data, filters: { order }, actualPosition } = useContext(myContext);\n  const { column, sort } = order\n  let hold = data;\n\n  hold = hold.sort(({ [column]: valueA }, { [column]: valueB }) => {\n    const minusOne = -1;\n\n    let bool = Number(valueA) > Number(valueB) ? minusOne : 1;\n    if (sort === 'ASC') {\n      bool = Number(valueA) > Number(valueB) ? 1 : minusOne;\n    }\n\n    if (column === 'name') {\n      bool = valueB > valueA ? 1 : minusOne;\n      if (sort === 'ASC') {\n        bool = valueA > valueB ? 1 : minusOne;\n      }\n    }\n\n    return bool;\n  });\n\n  useEffect(() => {\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(70, window.innerWidth/window.innerHeight, 0.1, 1000)\n    const render = new THREE.WebGLRenderer({ canvas: document.getElementById('canvas') })\n    document.body.appendChild( render.domElement );\n\n\n    camera.position.z = 200\n    const controls = new OrbitControls(camera, render.domElement)\n  \n    render.setPixelRatio( window.devicePixelRatio )\n    render.setSize(window.innerWidth, window.innerHeight)\n\n    const planets = []\n    hold.forEach(({ diameter, rotation_period, name }) => {\n      const planet = Planet(diameter, name)\n      planets.push({ planet, rotation_period })\n    })\n\n    if (planets.length) {\n      scene.add(planets[actualPosition].planet)\n    }\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, .1)\n    const light = new THREE.PointLight(0xffffff, 1, 0)\n    light.position.z = 500\n    scene.add(light)\n    scene.add(ambientLight)\n\n    const addStars = () => {\n      for(let c = 0; c < 150; c += 1) {\n        const shape = new THREE.SphereGeometry(1, 60, 30)\n        const color = new THREE.MeshBasicMaterial({ color: 0xffffff })\n        const star = new THREE.Mesh(shape, color)\n\n        const x = Math.floor(Math.random() * 2000) - 1500\n        const y = Math.floor(Math.random() * 2000) - 1500\n        const z = Math.floor(Math.random() * 2000) - 1500\n\n        star.position.x = x\n        star.position.y = y\n        star.position.z = z\n\n        scene.add(star)\n      }\n      render.render(scene, camera)\n    }\n    addStars()\n\n    window.addEventListener('resize', () => {\n      render.setPixelRatio(window.devicePixelRatio)\n      render.setSize(window.innerWidth, window.innerHeight)\n      camera.aspect = window.innerWidth / window.innerHeight\n      camera.updateProjectionMatrix();\n    })\n\n    const animate = () => {\n      requestAnimationFrame( animate )\n\n      if (planets.length) {\n        const { planet, rotation_period } = planets[actualPosition]\n        const realRotation = Number(rotation_period) / 1000\n        planet.rotation.y += realRotation\n      }\n      \n      controls.update()\n      render.render(scene, camera)\n    }\n    animate()\n\n    \n  }, [data, order, actualPosition])\n\n  return (\n    <canvas id=\"canvas\" />\n  );\n};\n\nexport default Planets;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { myContext } from '../context/MyProvider';\n\nconst Filter = () => {\n  const { filters, setActualPosition, setFilter, setData, planets } = useContext(myContext);\n  const [name, setName] = useState('');\n  const [columnFilter, setColumnFilter] = useState('rotation_period');\n  const [comparisionFilter, setComparisionFilter] = useState('maior que');\n  const [valueFilter, setValueFilter] = useState('');\n  const [columnSort, setColumnSort] = useState('name');\n  const [direction, setDirection] = useState('ASC');\n  const { filterByNumericValues } = filters;\n\n  const changeName = (newName) => {\n    const newFilter = {\n      ...filters,\n      filterByName: {\n        name: newName,\n      },\n    };\n    setFilter(newFilter);\n  };\n\n  const changeOrder = () => {\n    const newFilter = {\n      ...filters,\n      order: {\n        column: columnSort,\n        sort: direction,\n      },\n    };\n    setFilter(newFilter);\n  };\n\n  const changeNumericFilter = () => {\n    const newFilter = {\n      ...filters,\n      filterByNumericValues: [\n        ...filterByNumericValues,\n        {\n          column: columnFilter,\n          comparison: comparisionFilter,\n          value: valueFilter,\n        },\n      ],\n    };\n    setFilter(newFilter);\n  };\n\n  const changeData = () => {\n    let hold = planets;\n\n    if (filterByNumericValues.length) {\n      filterByNumericValues.forEach(({ column, comparison, value }) => {\n        hold = hold.filter((planet) => {\n          switch (comparison) {\n          case 'maior que':\n            return planet[column] > value;\n          case 'menor que':\n            return planet[column] < value;\n          case 'igual a':\n            return planet[column] === value;\n          default:\n            return false;\n          }\n        });\n      });\n    }\n\n    if (name) {\n      hold = hold.filter(({ name: planetName }) => {\n        const regex = new RegExp(name, 'i');\n        return regex.test(planetName);\n      });\n    }\n\n    setActualPosition(0)\n    setData(hold);\n  };\n\n  const deleteNumericFilter = (column) => {\n    const filtredNumericFilter = filterByNumericValues\n      .filter(({ column: currColumn }) => currColumn !== column);\n    const newFilter = {\n      ...filters,\n      filterByNumericValues: filtredNumericFilter,\n    };\n    setFilter(newFilter);\n  };\n\n  const renderColumns = () => {\n    const removeNames = filterByNumericValues.map(({ column }) => column);\n    let columnFilterKeys = [\n      'rotation_period',\n      'orbital_period',\n      'diameter',\n      'gravity',\n      'surface_water',\n      'population',\n    ];\n\n    if (removeNames.length) {\n      columnFilterKeys = columnFilterKeys.filter((key) => !removeNames.includes(key));\n    }\n\n    columnFilterKeys = columnFilterKeys\n      .map((key) => <option key={ key } value={ key }>{ key }</option>);\n    return columnFilterKeys;\n  };\n\n  const currentFilters = filterByNumericValues.map(({ column, comparison, value }) => (\n    <div className=\"curr-filter\" key={ column }>\n      <p>{ `${column} ${comparison} ${value}` }</p>\n      <button\n        type=\"button\"\n        data-testid=\"filter\"\n        onClick={ () => deleteNumericFilter(column) }\n      >\n        X\n      </button>\n    </div>\n  ));\n\n  useEffect(() => {\n    changeName(name);\n    changeData();\n  }, [name, filterByNumericValues]);\n\n  return (\n    <>\n      <div className=\"filters\">\n        <h1>Filtros</h1>\n        <input\n          placeholder=\"Filtrar por nome...\"\n          data-testid=\"name-filter\"\n          value={ name }\n          onChange={ ({ target: { value } }) => setName(value) }\n        />\n        <h2>Coluna:</h2>\n        <select\n          data-testid=\"comparison-filter\"\n          value={ columnFilter }\n          onChange={ ({ target: { value } }) => setColumnFilter(value) }\n        >\n          { renderColumns() }\n        </select>\n        <h2>Comparação:</h2>\n        <select\n          data-testid=\"column-filter\"\n          value={ comparisionFilter }\n          onChange={ ({ target: { value } }) => setComparisionFilter(value) }\n        >\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n        <h2>Valor:</h2>\n        <input\n          type=\"number\"\n          value={ valueFilter }\n          onChange={ ({ target: { value } }) => setValueFilter(value) }\n          data-testid=\"value-filter\"\n        />\n        <button\n          data-testid=\"button-filter\"\n          disabled={ !valueFilter }\n          type=\"button\"\n          onClick={ changeNumericFilter }\n        >\n          Filtrar\n        </button>\n      </div>\n      <div className=\"ordernate\">\n        <h1>Order</h1>\n        <select\n          data-testid=\"column-sort\"\n          value={ columnSort }\n          onChange={ ({ target: { value } }) => setColumnSort(value) }\n        >\n          <option value=\"name\">name</option>\n          { renderColumns() }\n        </select>\n        <div className=\"flex\">\n          <label htmlFor=\"ASC\">\n            ASC\n            <input\n              onChange={ () => setDirection('ASC') }\n              checked={ direction === 'ASC' }\n              type=\"radio\"\n              id=\"ASC\"\n            />\n          </label>\n          <label htmlFor=\"DESC\">\n            DESC\n            <input\n              onChange={ () => setDirection('DESC') }\n              checked={ direction === 'DESC' }\n              type=\"radio\"\n              id=\"DESC\"\n            />\n          </label>\n        </div>\n        <button\n          onClick={ changeOrder }\n          type=\"button\"\n        >\n          Ordenar\n        </button>\n      </div>\n      <div className=\"filters-available\">\n        { !!filterByNumericValues.length && currentFilters }\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n","import React, { useContext } from 'react';\nimport { myContext } from '../context/MyProvider';\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa';\n\nconst Info = () => {\n  const { data, actualPosition, setActualPosition } = useContext(myContext)\n\n  const renderName = () => {\n    const { name } = data[actualPosition]\n\n    return (\n      <div className=\"change_position\">\n        <button\n          onClick={ () => {\n            let prevPos = actualPosition - 1\n            if (prevPos < 0) {\n              prevPos = data.length - 1\n            }\n            setActualPosition(prevPos)\n          } }\n        > \n          <FaAngleLeft /> \n        </button>\n        <h1>{ name }</h1>\n        <button\n          onClick={ () => {\n            let nextPos = actualPosition + 1\n            if (nextPos > data.length - 1) {\n              nextPos = 0\n            }\n            setActualPosition(nextPos)\n          } }\n        > \n          <FaAngleRight /> \n        </button>\n      </div>\n    )\n  }\n\n  const renderInfo = () => {\n    const planetInfo = data[actualPosition]\n    const entries = Object.entries(planetInfo)\n    const elements = entries.map((info) => {\n      const title = info[0].split('_').join(' ')\n\n      return (\n        <h1>\n          { title }\n          <span>{ `: ${info[1]}` }</span>\n        </h1>\n      )\n    })\n\n    return (\n      <div className=\"information\">\n        { elements }\n      </div>\n    )\n  }\n\n  return (\n    <>\n      { !!data.length && renderName() }\n      { !!data.length && renderInfo() }\n    </>\n  )\n}\n\nexport default Info;\n","import React from 'react';\nimport Planets from './components/Planets';\nimport Filter from './components/Filter';\nimport Info from './components/Infos';\nimport MyProvider from './context/MyProvider';\nimport './css/App.css'\n\nfunction App() {\n  return (\n    <MyProvider>\n      <Filter />\n      <Planets />\n      <Info />\n    </MyProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}